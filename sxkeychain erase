[33mcommit 53ad243d090880b68b88d7a2810cbebe7fd31875[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Thu Jul 21 16:47:56 2022 -0500

    dictionary app creation

[1mdiff --git a/.DS_Store b/.DS_Store[m
[1mindex a62baa3..657495d 100644[m
Binary files a/.DS_Store and b/.DS_Store differ
[1mdiff --git a/README.md b/README.md[m
[1mdeleted file mode 100644[m
[1mindex 90e7ece..0000000[m
[1m--- a/README.md[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-# practice_ruby[m
[1mdiff --git a/dictionary_app.rb b/dictionary_app.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..4088c53[m
[1m--- /dev/null[m
[1m+++ b/dictionary_app.rb[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mrequire "http"[m
[32m+[m
[32m+[m[32m"enter a word: "[m
[32m+[m[32mword = gets.chomp[m
[32m+[m[32mdictionary = HTTP.get("https://api.wordnik.com/v4/word.json/#{word}/definitions?limit=200&includeRelated=false&useCanonical=false&includeTags=false&api_key=22bf12vddbpizrmyfs90cf695e9j4u1seq52o4klisqmqn6v2").parse(:json)[m
[32m+[m
[32m+[m[32mp dictionary[0]["id"][m
[1mdiff --git a/main.rb b/main.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..6c69350[m
[1m--- /dev/null[m
[1m+++ b/main.rb[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mrequire "./employee.rb"[m
[32m+[m[32mrequire "./email_reportable.rb"[m
[32m+[m[32mrequire "./manager.rb"[m
[32m+[m[32mrequire "./intern.rb"[m
[32m+[m
[32m+[m[32memployee1 = Actualize::Employee.new({ :first_name => "Majora", :last_name => "Carter", :salary => 80000, :active => true })[m
[32m+[m[32memployee1 = Actualize::Employee.new({ first_name: "Majora", last_name: "Carter", salary: 80000, active: true })[m
[32m+[m[32mp employee1.first_name[m
[32m+[m[32memployee1.print_info[m
[32m+[m[32memployee1.give_annual_raise[m
[32m+[m[32memployee1.print_info[m
[32m+[m
[32m+[m[32memployee2 = Actualize::Employee.new(first_name: "Danilo", last_name: "Campos", salary: 100000, active: false)[m
[32m+[m[32memployee2.print_info[m
[32m+[m
[32m+[m[32mp employee2.first_name[m
[32m+[m[32memployee2.first_name = "Jessica"[m
[32m+[m[32mp employee2.first_name[m
[32m+[m
[32m+[m[32memployee2.print_info[m
[32m+[m
[32m+[m[32mmanager = Actualize::Manager.new([m
[32m+[m[32m  first_name: "Manny",[m
[32m+[m[32m  last_name: "Williams",[m
[32m+[m[32m  salary: 200000,[m
[32m+[m[32m  active: true,[m
[32m+[m[32m  employees: [employee1, employee2],[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mmanager.print_info[m
[32m+[m[32mmanager.give_annual_raise[m
[32m+[m[32mmanager.print_info[m
[32m+[m[32mmanager.send_report[m
[32m+[m
[32m+[m[32mp manager.employees[m
[32m+[m[32mp "employee1 salary before raise"[m
[32m+[m[32mp employee1.salary[m
[32m+[m[32mp "employee2 salary before raise"[m
[32m+[m[32mp employee2.salary[m
[32m+[m[32mmanager.give_all_raises[m
[32m+[m[32mp "employee1 salary after raise"[m
[32m+[m[32mp employee1.salary[m
[32m+[m[32mp "employee2 salary after raise"[m
[32m+[m[32mp employee2.salary[m
[32m+[m
[32m+[m[32mmanager.fire_all_employees[m
[32m+[m
[32m+[m[32mp manager.employees[m
[32m+[m
[32m+[m[32mintern = Actualize::Intern.new(first_name: "Ingrid", last_name: "Rice", salary: 0, active: true)[m
[32m+[m[32mintern.print_info[m
[32m+[m[32mintern.send_report[m
[1mdiff --git a/module_example.rb b/module_example.rb[m
[1mdeleted file mode 100644[m
[1mindex ebf56c9..0000000[m
[1m--- a/module_example.rb[m
[1m+++ /dev/null[m
[36m@@ -1,42 +0,0 @@[m
[31m-module Command[m
[31m-  def[m
[31m-    speed = 0[m
[31m-  end[m
[31m-  def  [m
[31m-    direction = "north"[m
[31m-  end[m
[31m-  def  [m
[31m-    brake[m
[31m-  end[m
[31m-  def[m
[31m-    accelerate = 0[m
[31m-  end[m
[31m-  def turn(new_direction)[m
[31m-    @direction = new_direction[m
[31m-  end[m
[31m-  end  [m
[31m-end[m
[31m-class Car[m
[31m-  include Command[m
[31m-  def initialize[m
[31m-    @speed = 0[m
[31m-    @direction = 'north'[m
[31m-  end[m
[31m-  def honk_horn[m
[31m-    puts "Beeeeeeep!"[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Bike[m
[31m-  include Command[m
[31m-  def initialize[m
[31m-    @speed = 0[m
[31m-    @direction = 'north'[m
[31m-  end[m
[31m-[m
[31m-  def ring_bell[m
[31m-    puts "Ring ring!"[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-car = Car.newcar.brake[m
\ No newline at end of file[m

[33mcommit c8f725880014645c544bfd96a6e76b66fe951e05[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Thu Jul 21 16:43:43 2022 -0500

    fixing files

[1mdiff --git a/.DS_Store b/.DS_Store[m
[1mnew file mode 100644[m
[1mindex 0000000..a62baa3[m
Binary files /dev/null and b/.DS_Store differ
[1mdiff --git a/bowling.rb b/bowling.rb[m
[1mdeleted file mode 100644[m
[1mindex e37c8f3..0000000[m
[1m--- a/bowling.rb[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-# 1 person[m
[31m-# 2 rolls per frame[m
[31m-# 10 frames[m
[31m-[m
[31m-# [[m
[31m-#   [4,6][m
[31m-#   [7,8][m
[31m-#   [7,8][m
[31m-#   [7,8][m
[31m-#   [7,8][m
[31m-# ][m
[31m-[m
[31m-scores = [][m
[31m-p "enter your scores"[m
[31m-10.times do[m
[31m-  frame = [rand(4), rand(4)][m
[31m-  scores << frame[m
[31m-end[m
[31m-[m
[31m-p scores.flatten.sum[m
[31m-[m
[31m-p "Your total score is #{scores.flatten.sum}"[m
[1mdiff --git a/email_reportable.rb b/email_reportable.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..d041f24[m
[1m--- /dev/null[m
[1m+++ b/email_reportable.rb[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mmodule Actualize[m
[32m+[m[32m  module EmailReportable[m
[32m+[m[32m    def send_report[m
[32m+[m[32m      p "about to send the report..."[m
[32m+[m[32m      # some code that actually sends a report[m
[32m+[m[32m      p "definitely just sent that report!"[m
[32m+[m[32m    end[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[1mdiff --git a/employee.rb b/employee.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..0f41ffd[m
[1m--- /dev/null[m
[1m+++ b/employee.rb[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mmodule Actualize[m
[32m+[m[32m  class Employee[m
[32m+[m[32m    attr_reader :first_name, :last_name, :salary[m
[32m+[m[32m    attr_writer :first_name, :active[m
[32m+[m
[32m+[m[32m    def initialize(input_options)[m
[32m+[m[32m      @first_name = input_options[:first_name][m
[32m+[m[32m      @last_name = input_options[:last_name][m
[32m+[m[32m      @salary = input_options[:salary][m
[32m+[m[32m      @active = input_options[:active][m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    def print_info[m
[32m+[m[32m      p "#{first_name} #{last_name} makes $#{salary} per year."[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    def give_annual_raise[m
[32m+[m[32m      @salary *= 1.05[m
[32m+[m[32m    end[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mFooter[m
[1mdiff --git a/exercice.rb/debug.rb b/exercice.rb/debug.rb[m
[1mdeleted file mode 100644[m
[1mindex 3ada3f7..0000000[m
[1m--- a/exercice.rb/debug.rb[m
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-# # Exercise 2: Write a function to print when each person died in a sentence.[m
[31m-# dickens = ["Charles Dickens", 1870][m
[31m-# thackeray = ["William Thackeray", 1863][m
[31m-# trollope = ["Anthony Trollope", 1882][m
[31m-# hopkins = ["Gerard Manley Hopkins", 1889][m
[31m-[m
[31m-# def died(array)[m
[31m-#   name = array[0][m
[31m-#   year = array[1][m
[31m-[m
[31m-#   puts "#{name} died in #{year}."[m
[31m-# end[m
[31m-[m
[31m-# puts died(dickens)[m
[31m-# puts died(thackeray)[m
[31m-# puts died(trollope)[m
[31m-# puts died(hopkins)[m
[31m-[m
[31m-# Exercise 4: Make a class to store and display a person‚Äôs info.[m
[31m-class Person[m
[31m-  def initialize(fname, lname)[m
[31m-    @first_name = fname[m
[31m-    @last_name == lname[m
[31m-  end[m
[31m-[m
[31m-  def fname[m
[31m-    @fname[m
[31m-  end[m
[31m-[m
[31m-  def to_s[m
[31m-    "@last_name + ,  + @first_name"√ü[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-tj = Person.new("Thomas", "Jefferson")[m
[31m-puts tj.fname[m
[31m-puts tj[m
[1mdiff --git a/exercice.rb/exercice.rb b/exercice.rb/exercice.rb[m
[1mdeleted file mode 100644[m
[1mindex f3d3a65..0000000[m
[1m--- a/exercice.rb/exercice.rb[m
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-# #Exercise 1: Print a message to a pirate.[m
[31m-# puts ‚ÄúHello![m
[31m-# greeting = gets.chomp[m
[31m-# if answer == ‚ÄúArrr!‚Äú[m
[31m-#   puts ‚ÄúGo away, pirate.‚Äù[m
[31m-# Elsif[m
[31m-#   puts ‚ÄúGreetings, hater of pirates!‚Äù[m
[31m-# Exercise 2: Write a function to print when each person died in a sentence.[m
[31m-dickens = [‚ÄúCharles Dickens,‚Äù ‚Äú1870"][m
[31m-thackeray = {‚ÄúWilliam Thackeray‚Äù, ‚Äú1863"}[m
[31m-trollope = {‚ÄòAnthony Trollope‚Äô, ‚Äò1882‚Äô}[m
[31m-hopkins = [‚ÄúGerard Manley Hopkins‚Äù => ‚Äú1889"][m
[31m-def died(array)[m
[31m-  name = array[2][m
[31m-  year = array[1][m
[31m-  puts  ‚Äú#name died in {year}.‚Äù[m
[31m-puts died(Dickens)[m
[31m-puts died(thackeray)[m
[31m-put died(trollop)[m
[31m-puts died(hopkins)[m
[31m-end[m
[31m-# Exercise 3: Print a message to a time traveler.[m
[31m-# puts ‚ÄúGreetings! What is your year of origin?'[m
[31m-# origin == gets.chomp[m
[31m-# if origin < 1900[m
[31m-  # puts ‚ÄòThat‚Äôs the past!‚Äô[m
[31m-# elseif origin > 1900 && origin < 2020[m
[31m-  # puts ‚ÄúThat‚Äôs the present!‚Äù[m
[31m-# elsif[m
[31m-  # puts ‚ÄúThat‚Äôs the future!‚Äù[m
[31m-# ```[m
[31m-# Exercise 4: Make a class to store and display a person‚Äôs info.[m
[31m-# classy Person[m
[31m-  # def initial(fname lname)[m
[31m-    # @first_name = firstname[m
[31m-    # @last_name == lname[m
[31m-  # def to_s[m
[31m-    # @last_name +,‚Äù ‚Äù + @first_name[m
[31m-# end[m
[31m-# tj = Person.new(‚ÄúThomas‚Äù, ‚ÄúJefferson‚Äù)[m
[31m-# puts person.fname[m
[31m-# put tj[m
[31m-# ```[m
[31m-# Exercise 5: Write a program that will average 3 numeric exam grades, return an average test score, a corresponding letter grade, and a message stating whether the student is passing.[m
[31m-# ```[m
[31m-# put ‚ÄúInput exam grade one:‚Äù[m
[31m-# exam_one = gets.chomp().toi[m
[31m-# puts ‚ÄòInput exam grade two:‚Äô[m
[31m-# exam_two = gets.chomp(.to_s[m
[31m-# puts ‚ÄúInput exam grade three:‚Äù[m
[31m-# exam_3 = gets.chomp().to_i[m
[31m-# def list_grade(exam_one exam_two exam_three)[m
[31m-  # puts ‚ÄúExams: #exam_one}, #{exam_two}, {exam_three}‚Äù[m
[31m-# end[m
[31m-# def average_grade(exam_one, exam_two, exam_three)[m
[31m-  # average == (exam_one + exam_two + exam_three) / 3)[m
[31m-# end[m
[31m-# average = avrage_grade(exam_one, exam_two, exam_three).to_i[m
[31m-# def letter_grade(average-grade)[m
[31m-  # if average_grade < 59[m
[31m-    # puts ‚ÄúGrade: F‚Äù[m
[31m-  # elseif average_grade >= 60 && average_grade <= 69[m
[31m-    # puts ‚ÄúGrade: D‚Äù[m
[31m-  # elsif average_grade > 70 & average_grade <= 79[m
[31m-    # puts ‚ÄòGrade: C‚Äù[m
[31m-  # elseif average_grade >= 80 && average_grade <= 89[m
[31m-    # puts ‚ÄúGrade: B‚Äù[m
[31m-  # elsif average_grade >= 90[m
[31m-    # puts ‚ÄúGrade: A‚Äô[m
[31m-# end[m
[31m-# def pass_fail(average)[m
[31m-  # if average < 59[m
[31m-    # puts ‚ÄúStudent is failing.[m
[31m-  # else puts ‚ÄúStudent is passing.‚Äù[m
[31m-  # end[m
[31m-# end[m
[31m-# list_grade(exam_one, exam_two, exam_three)[m
[31m-# puts ‚ÄúAverage‚Äù: #{average}‚Äù[m
[31m-# lettergrade(average) 	[m
[31m-# pass_fail(average)[m
[31m-# ```[m
[31m-# Exercise 6: Make a command line app to manage employee data.[m
[31m-# https://drive.google.com/file/d/1DBwethY2Ux8p8S-58DALn8apk9tQfR1i/view[m
[31m-# https://gist.github.com/peterxjang/931384a4f3a75afd70482813fa00ba70[m
\ No newline at end of file[m
[1mdiff --git a/faker_practice.rb b/faker_practice.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..8395e0a[m
[1m--- /dev/null[m
[1m+++ b/faker_practice.rb[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mrequire "faker"[m
[32m+[m
[32m+[m[32m# p Faker::Name.name      #=> "Christophe Bartell"[m
[32m+[m
[32m+[m[32m# p Faker::Internet.email #=> "kirsten.greenholt@corkeryfisher.info"[m
[32m+[m
[32m+[m[32manimal = Faker::Creature::Animal.name #=> "Antelope"[m
[32m+[m[32mp animal.upcase[m
[1mdiff --git a/inheritance_example.rb b/inheritance_example.rb[m
[1mdeleted file mode 100644[m
[1mindex e3ea4b2..0000000[m
[1m--- a/inheritance_example.rb[m
[1m+++ /dev/null[m
[36m@@ -1,50 +0,0 @@[m
[31m-class Car[m
[31m-  def initialize[m
[31m-    @speed = 0[m
[31m-    @direction = "north"[m
[31m-  end[m
[31m-[m
[31m-  def brake[m
[31m-    @speed = 0[m
[31m-  end[m
[31m-[m
[31m-  def accelerate[m
[31m-    @speed += 10[m
[31m-  end[m
[31m-[m
[31m-  def turn(new_direction)[m
[31m-    @direction = new_direction[m
[31m-  end[m
[31m-[m
[31m-  def honk_horn[m
[31m-    puts "Beeeeeeep!"[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Bike[m
[31m-  def initialize[m
[31m-    @speed = 0[m
[31m-    @direction = "north"[m
[31m-  end[m
[31m-[m
[31m-  def brake[m
[31m-    @speed = 0[m
[31m-  end[m
[31m-[m
[31m-  def accelerate[m
[31m-    @speed += 10[m
[31m-  end[m
[31m-[m
[31m-  def turn(new_direction)[m
[31m-    @direction = new_direction[m
[31m-  end[m
[31m-[m
[31m-  def ring_bell[m
[31m-    puts "Ring ring!"[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-bicycle = Bike.new(10, "south")[m
[31m-car = Car.new(50, south)[m
[31m-p bicycle[m
[31m-p car[m
[1mdiff --git a/intern.rb b/intern.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..39fa2df[m
[1m--- /dev/null[m
[1m+++ b/intern.rb[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mmodule Actualize[m
[32m+[m[32m  class Intern < Manager[m
[32m+[m[32m    include EmailReportable[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[1mdiff --git a/manager.rb b/manager.rb[m
[1mindex 36da8b2..b93ebd2 100644[m
[1m--- a/manager.rb[m
[1m+++ b/manager.rb[m
[36m@@ -1,112 +1,29 @@[m
[31m-class Employee[m
[31m-  attr_reader :first_name, :last_name, :salary[m
[31m-  attr_writer :first_name, :active[m
[32m+[m[32mmodule Actualize[m
[32m+[m[32m  class Manager < Employee[m
[32m+[m[32m    attr_reader :employees[m
 [m
[31m-  def initialize(input_options)[m
[31m-    @first_name = input_options[:first_name][m
[31m-    @last_name = input_options[:last_name][m
[31m-    @salary = input_options[:salary][m
[31m-    @active = input_options[:active][m
[31m-  end[m
[31m-[m
[31m-  def print_info[m
[31m-    p "#{first_name} #{last_name} makes $#{salary} per year, and that is their salary"[m
[31m-  end[m
[31m-[m
[31m-  def give_annual_raise[m
[31m-    @salary *= 1.05[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-# employee1 = Employee.new({:first_name => "Majora", :last_name => "Carter", :salary => 80000, :active => true})[m
[31m-employee1 = Employee.new({ first_name: "Majora", last_name: "Carter", salary: 80000, active: true })[m
[31m-# p employee1.first_name[m
[31m-# employee1.print_info[m
[31m-# employee1.give_annual_raise[m
[31m-# employee1.print_info[m
[32m+[m[32m    include EmailReportable[m
 [m
[31m-employee2 = Employee.new(first_name: "Danilo", last_name: "Campos", salary: 100000, active: false)[m
[31m-# employee2.print_info[m
[31m-[m
[31m-# p employee2.first_name[m
[31m-# employee2.first_name = "Jessica"[m
[31m-# p employee2.first_name[m
[31m-[m
[31m-# employee2.print_info[m
[31m-[m
[31m-# a manager can send reports[m
[31m-# a manager can have employees[m
[31m-[m
[31m-class Manager < Employee[m
[31m-  attr_reader :employees[m
[31m-[m
[31m-  def initialize(input_options)[m
[31m-    super[m
[31m-    @employees = input_options[:employees][m
[31m-  end[m
[31m-[m
[31m-  def send_report[m
[31m-    p "about to send the report..."[m
[31m-    # some code that actually sends a report[m
[31m-    p "definitely just sent that report!"[m
[31m-  end[m
[32m+[m[32m    def initialize(input_options)[m
[32m+[m[32m      super[m
[32m+[m[32m      @employees = input_options[:employees][m
[32m+[m[32m    end[m
 [m
[31m-  def give_all_raises[m
[31m-    p "going to give everyody a raise"[m
[31m-    employees.each do |employee|[m
[31m-      employee.give_annual_raise[m
[32m+[m[32m    def give_all_raises[m
[32m+[m[32m      p "going to give everyody a raise"[m
[32m+[m[32m      employees.each do |employee|[m
[32m+[m[32m        employee.give_annual_raise[m
[32m+[m[32m      end[m
[32m+[m[32m      # employee1 = employees[0][m
[32m+[m[32m      # employee1.give_annual_raise[m
[32m+[m[32m      # employee2 = employees[1][m
[32m+[m[32m      # employee2.give_annual_raise[m
     end[m
[31m-    # employee1 = employees[0][m
[31m-    # employee1.give_annual_raise[m
[31m-    # employee2 = employees[1][m
[31m-    # employee2.give_annual_raise[m
[31m-  end[m
 [m
[31m-  def fire_all_employees[m
[31m-    employees.each do |employee|[m
[31m-      p employee.active = false[m
[32m+[m[32m    def fire_all_employees[m
[32m+[m[32m      employees.each do |employee|[m
[32m+[m[32m        p employee.active = false[m
[32m+[m[32m      end[m
     end[m
   end[m
 end[m
[31m-[m
[31m-manager = Manager.new([m
[31m-  first_name: "Manny",[m
[31m-  last_name: "Williams",[m
[31m-  salary: 200000,[m
[31m-  active: true,[m
[31m-  employees: [employee1, employee2],[m
[31m-)[m
[31m-[m
[31m-# manager.print_info[m
[31m-# manager.give_annual_raise[m
[31m-# manager.print_info[m
[31m-# manager.send_report[m
[31m-[m
[31m-# p manager.employees[m
[31m-# p "employee1 salary before raise"[m
[31m-# p employee1.salary[m
[31m-# p "employee2 salary before raise"[m
[31m-# p employee2.salary[m
[31m-# manager.give_all_raises[m
[31m-# p "employee1 salary after raise"[m
[31m-# p employee1.salary[m
[31m-# p "employee2 salary after raise"[m
[31m-# p employee2.salary[m
[31m-[m
[31m-manager.fire_all_employees[m
[31m-[m
[31m-p manager.employees[m
[31m-[m
[31m-# Don't[m
[31m-# Repeat[m
[31m-# Yourself[m
[31m-[m
[31m-# Write[m
[31m-# Everything[m
[31m-# Twice[m
[31m-[m
[31m-# give all the employees a raise[m
[31m-# make a method[m
[31m-# find all the employees [employee1, employee2][m
[31m-# find just one of the employees[m
[31m-# give one employee a raise[m
[1mdiff --git a/store_item.rb b/store_item.rb[m
[1mdeleted file mode 100644[m
[1mindex ae344e9..0000000[m
[1m--- a/store_item.rb[m
[1m+++ /dev/null[m
[36m@@ -1,59 +0,0 @@[m
[31m-# coffee = {[m
[31m-#   :item => "cappucino",[m
[31m-#   :price => 4.99,[m
[31m-#   :size => "large",[m
[31m-# }[m
[31m-# pastries = {[m
[31m-#   :item => "croissant",[m
[31m-#   :price => 3.99,[m
[31m-#   :size => "standard",[m
[31m-# }[m
[31m-# plates = {[m
[31m-#   :item => "salad",[m
[31m-#   :price => 7.99,[m
[31m-#   :size => "small",[m
[31m-# }[m
[31m-# puts coffee[:item][m
[31m-[m
[31m-# class Store[m
[31m-# def initialize(item, price, size)[m
[31m-# @item = item[m
[31m-# #     @price = price[m
[31m-# #     @size = size[m
[31m-# #   end[m
[31m-[m
[31m-# #   def item[m
[31m-# #     @item[m
[31m-# #   end[m
[31m-[m
[31m-# #   def price[m
[31m-# #     @price[m
[31m-# #   end[m
[31m-[m
[31m-# #   def size=(add_size)[m
[31m-# #     @size = add_size[m
[31m-# #   end[m
[31m-# # end[m
[31m-[m
[31m-# # store1 = Store.new("cappucino", 4.99, "large")[m
[31m-[m
[31m-# # puts store1.item[m
[31m-# # puts store1.price[m
[31m-# # puts store1.size = ("medium")[m
[31m-[m
[31m-class Store[m
[31m-  attr_reader :item, :price[m
[31m-  attr_writer :size[m
[31m-[m
[31m-  def initialize(input_options)[m
[31m-    @item = input_options[:item][m
[31m-    @price = input_options[:price][m
[31m-    @size = input_options[:size][m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-store1 = Store.new(item: "cappucino", price: 4.99, size: "large")[m
[31m-[m
[31m-puts store1.item[m
[31m-puts store1.price[m
[31m-puts store1.size = ("medium")[m

[33mcommit 4e21571cc77176360d9ba83884f31fc64f2d756c[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Thu Jul 21 12:46:21 2022 -0500

    changes

[1mdiff --git a/bowling.rb b/bowling.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..e37c8f3[m
[1m--- /dev/null[m
[1m+++ b/bowling.rb[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m# 1 person[m
[32m+[m[32m# 2 rolls per frame[m
[32m+[m[32m# 10 frames[m
[32m+[m
[32m+[m[32m# [[m
[32m+[m[32m#   [4,6][m
[32m+[m[32m#   [7,8][m
[32m+[m[32m#   [7,8][m
[32m+[m[32m#   [7,8][m
[32m+[m[32m#   [7,8][m
[32m+[m[32m# ][m
[32m+[m
[32m+[m[32mscores = [][m
[32m+[m[32mp "enter your scores"[m
[32m+[m[32m10.times do[m
[32m+[m[32m  frame = [rand(4), rand(4)][m
[32m+[m[32m  scores << frame[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mp scores.flatten.sum[m
[32m+[m
[32m+[m[32mp "Your total score is #{scores.flatten.sum}"[m
[1mdiff --git a/exercice.rb/debug.rb b/exercice.rb/debug.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..3ada3f7[m
[1m--- /dev/null[m
[1m+++ b/exercice.rb/debug.rb[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m# # Exercise 2: Write a function to print when each person died in a sentence.[m
[32m+[m[32m# dickens = ["Charles Dickens", 1870][m
[32m+[m[32m# thackeray = ["William Thackeray", 1863][m
[32m+[m[32m# trollope = ["Anthony Trollope", 1882][m
[32m+[m[32m# hopkins = ["Gerard Manley Hopkins", 1889][m
[32m+[m
[32m+[m[32m# def died(array)[m
[32m+[m[32m#   name = array[0][m
[32m+[m[32m#   year = array[1][m
[32m+[m
[32m+[m[32m#   puts "#{name} died in #{year}."[m
[32m+[m[32m# end[m
[32m+[m
[32m+[m[32m# puts died(dickens)[m
[32m+[m[32m# puts died(thackeray)[m
[32m+[m[32m# puts died(trollope)[m
[32m+[m[32m# puts died(hopkins)[m
[32m+[m
[32m+[m[32m# Exercise 4: Make a class to store and display a person‚Äôs info.[m
[32m+[m[32mclass Person[m
[32m+[m[32m  def initialize(fname, lname)[m
[32m+[m[32m    @first_name = fname[m
[32m+[m[32m    @last_name == lname[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def fname[m
[32m+[m[32m    @fname[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def to_s[m
[32m+[m[32m    "@last_name + ,  + @first_name"√ü[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mtj = Person.new("Thomas", "Jefferson")[m
[32m+[m[32mputs tj.fname[m
[32m+[m[32mputs tj[m
[1mdiff --git a/exercice.rb/exercice.rb b/exercice.rb/exercice.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..f3d3a65[m
[1m--- /dev/null[m
[1m+++ b/exercice.rb/exercice.rb[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m# #Exercise 1: Print a message to a pirate.[m
[32m+[m[32m# puts ‚ÄúHello![m
[32m+[m[32m# greeting = gets.chomp[m
[32m+[m[32m# if answer == ‚ÄúArrr!‚Äú[m
[32m+[m[32m#   puts ‚ÄúGo away, pirate.‚Äù[m
[32m+[m[32m# Elsif[m
[32m+[m[32m#   puts ‚ÄúGreetings, hater of pirates!‚Äù[m
[32m+[m[32m# Exercise 2: Write a function to print when each person died in a sentence.[m
[32m+[m[32mdickens = [‚ÄúCharles Dickens,‚Äù ‚Äú1870"][m
[32m+[m[32mthackeray = {‚ÄúWilliam Thackeray‚Äù, ‚Äú1863"}[m
[32m+[m[32mtrollope = {‚ÄòAnthony Trollope‚Äô, ‚Äò1882‚Äô}[m
[32m+[m[32mhopkins = [‚ÄúGerard Manley Hopkins‚Äù => ‚Äú1889"][m
[32m+[m[32mdef died(array)[m
[32m+[m[32m  name = array[2][m
[32m+[m[32m  year = array[1][m
[32m+[m[32m  puts  ‚Äú#name died in {year}.‚Äù[m
[32m+[m[32mputs died(Dickens)[m
[32m+[m[32mputs died(thackeray)[m
[32m+[m[32mput died(trollop)[m
[32m+[m[32mputs died(hopkins)[m
[32m+[m[32mend[m
[32m+[m[32m# Exercise 3: Print a message to a time traveler.[m
[32m+[m[32m# puts ‚ÄúGreetings! What is your year of origin?'[m
[32m+[m[32m# origin == gets.chomp[m
[32m+[m[32m# if origin < 1900[m
[32m+[m[32m  # puts ‚ÄòThat‚Äôs the past!‚Äô[m
[32m+[m[32m# elseif origin > 1900 && origin < 2020[m
[32m+[m[32m  # puts ‚ÄúThat‚Äôs the present!‚Äù[m
[32m+[m[32m# elsif[m
[32m+[m[32m  # puts ‚ÄúThat‚Äôs the future!‚Äù[m
[32m+[m[32m# ```[m
[32m+[m[32m# Exercise 4: Make a class to store and display a person‚Äôs info.[m
[32m+[m[32m# classy Person[m
[32m+[m[32m  # def initial(fname lname)[m
[32m+[m[32m    # @first_name = firstname[m
[32m+[m[32m    # @last_name == lname[m
[32m+[m[32m  # def to_s[m
[32m+[m[32m    # @last_name +,‚Äù ‚Äù + @first_name[m
[32m+[m[32m# end[m
[32m+[m[32m# tj = Person.new(‚ÄúThomas‚Äù, ‚ÄúJefferson‚Äù)[m
[32m+[m[32m# puts person.fname[m
[32m+[m[32m# put tj[m
[32m+[m[32m# ```[m
[32m+[m[32m# Exercise 5: Write a program that will average 3 numeric exam grades, return an average test score, a corresponding letter grade, and a message stating whether the student is passing.[m
[32m+[m[32m# ```[m
[32m+[m[32m# put ‚ÄúInput exam grade one:‚Äù[m
[32m+[m[32m# exam_one = gets.chomp().toi[m
[32m+[m[32m# puts ‚ÄòInput exam grade two:‚Äô[m
[32m+[m[32m# exam_two = gets.chomp(.to_s[m
[32m+[m[32m# puts ‚ÄúInput exam grade three:‚Äù[m
[32m+[m[32m# exam_3 = gets.chomp().to_i[m
[32m+[m[32m# def list_grade(exam_one exam_two exam_three)[m
[32m+[m[32m  # puts ‚ÄúExams: #exam_one}, #{exam_two}, {exam_three}‚Äù[m
[32m+[m[32m# end[m
[32m+[m[32m# def average_grade(exam_one, exam_two, exam_three)[m
[32m+[m[32m  # average == (exam_one + exam_two + exam_three) / 3)[m
[32m+[m[32m# end[m
[32m+[m[32m# average = avrage_grade(exam_one, exam_two, exam_three).to_i[m
[32m+[m[32m# def letter_grade(average-grade)[m
[32m+[m[32m  # if average_grade < 59[m
[32m+[m[32m    # puts ‚ÄúGrade: F‚Äù[m
[32m+[m[32m  # elseif average_grade >= 60 && average_grade <= 69[m
[32m+[m[32m    # puts ‚ÄúGrade: D‚Äù[m
[32m+[m[32m  # elsif average_grade > 70 & average_grade <= 79[m
[32m+[m[32m    # puts ‚ÄòGrade: C‚Äù[m
[32m+[m[32m  # elseif average_grade >= 80 && average_grade <= 89[m
[32m+[m[32m    # puts ‚ÄúGrade: B‚Äù[m
[32m+[m[32m  # elsif average_grade >= 90[m
[32m+[m[32m    # puts ‚ÄúGrade: A‚Äô[m
[32m+[m[32m# end[m
[32m+[m[32m# def pass_fail(average)[m
[32m+[m[32m  # if average < 59[m
[32m+[m[32m    # puts ‚ÄúStudent is failing.[m
[32m+[m[32m  # else puts ‚ÄúStudent is passing.‚Äù[m
[32m+[m[32m  # end[m
[32m+[m[32m# end[m
[32m+[m[32m# list_grade(exam_one, exam_two, exam_three)[m
[32m+[m[32m# puts ‚ÄúAverage‚Äù: #{average}‚Äù[m
[32m+[m[32m# lettergrade(average)[m[41m 	[m
[32m+[m[32m# pass_fail(average)[m
[32m+[m[32m# ```[m
[32m+[m[32m# Exercise 6: Make a command line app to manage employee data.[m
[32m+[m[32m# https://drive.google.com/file/d/1DBwethY2Ux8p8S-58DALn8apk9tQfR1i/view[m
[32m+[m[32m# https://gist.github.com/peterxjang/931384a4f3a75afd70482813fa00ba70[m
\ No newline at end of file[m
[1mdiff --git a/inheritance_example.rb b/inheritance_example.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..e3ea4b2[m
[1m--- /dev/null[m
[1m+++ b/inheritance_example.rb[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mclass Car[m
[32m+[m[32m  def initialize[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m    @direction = "north"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def brake[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def accelerate[m
[32m+[m[32m    @speed += 10[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def turn(new_direction)[m
[32m+[m[32m    @direction = new_direction[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def honk_horn[m
[32m+[m[32m    puts "Beeeeeeep!"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mclass Bike[m
[32m+[m[32m  def initialize[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m    @direction = "north"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def brake[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def accelerate[m
[32m+[m[32m    @speed += 10[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def turn(new_direction)[m
[32m+[m[32m    @direction = new_direction[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def ring_bell[m
[32m+[m[32m    puts "Ring ring!"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mbicycle = Bike.new(10, "south")[m
[32m+[m[32mcar = Car.new(50, south)[m
[32m+[m[32mp bicycle[m
[32m+[m[32mp car[m
[1mdiff --git a/manager.rb b/manager.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..36da8b2[m
[1m--- /dev/null[m
[1m+++ b/manager.rb[m
[36m@@ -0,0 +1,112 @@[m
[32m+[m[32mclass Employee[m
[32m+[m[32m  attr_reader :first_name, :last_name, :salary[m
[32m+[m[32m  attr_writer :first_name, :active[m
[32m+[m
[32m+[m[32m  def initialize(input_options)[m
[32m+[m[32m    @first_name = input_options[:first_name][m
[32m+[m[32m    @last_name = input_options[:last_name][m
[32m+[m[32m    @salary = input_options[:salary][m
[32m+[m[32m    @active = input_options[:active][m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def print_info[m
[32m+[m[32m    p "#{first_name} #{last_name} makes $#{salary} per year, and that is their salary"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def give_annual_raise[m
[32m+[m[32m    @salary *= 1.05[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m# employee1 = Employee.new({:first_name => "Majora", :last_name => "Carter", :salary => 80000, :active => true})[m
[32m+[m[32memployee1 = Employee.new({ first_name: "Majora", last_name: "Carter", salary: 80000, active: true })[m
[32m+[m[32m# p employee1.first_name[m
[32m+[m[32m# employee1.print_info[m
[32m+[m[32m# employee1.give_annual_raise[m
[32m+[m[32m# employee1.print_info[m
[32m+[m
[32m+[m[32memployee2 = Employee.new(first_name: "Danilo", last_name: "Campos", salary: 100000, active: false)[m
[32m+[m[32m# employee2.print_info[m
[32m+[m
[32m+[m[32m# p employee2.first_name[m
[32m+[m[32m# employee2.first_name = "Jessica"[m
[32m+[m[32m# p employee2.first_name[m
[32m+[m
[32m+[m[32m# employee2.print_info[m
[32m+[m
[32m+[m[32m# a manager can send reports[m
[32m+[m[32m# a manager can have employees[m
[32m+[m
[32m+[m[32mclass Manager < Employee[m
[32m+[m[32m  attr_reader :employees[m
[32m+[m
[32m+[m[32m  def initialize(input_options)[m
[32m+[m[32m    super[m
[32m+[m[32m    @employees = input_options[:employees][m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def send_report[m
[32m+[m[32m    p "about to send the report..."[m
[32m+[m[32m    # some code that actually sends a report[m
[32m+[m[32m    p "definitely just sent that report!"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def give_all_raises[m
[32m+[m[32m    p "going to give everyody a raise"[m
[32m+[m[32m    employees.each do |employee|[m
[32m+[m[32m      employee.give_annual_raise[m
[32m+[m[32m    end[m
[32m+[m[32m    # employee1 = employees[0][m
[32m+[m[32m    # employee1.give_annual_raise[m
[32m+[m[32m    # employee2 = employees[1][m
[32m+[m[32m    # employee2.give_annual_raise[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def fire_all_employees[m
[32m+[m[32m    employees.each do |employee|[m
[32m+[m[32m      p employee.active = false[m
[32m+[m[32m    end[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mmanager = Manager.new([m
[32m+[m[32m  first_name: "Manny",[m
[32m+[m[32m  last_name: "Williams",[m
[32m+[m[32m  salary: 200000,[m
[32m+[m[32m  active: true,[m
[32m+[m[32m  employees: [employee1, employee2],[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m# manager.print_info[m
[32m+[m[32m# manager.give_annual_raise[m
[32m+[m[32m# manager.print_info[m
[32m+[m[32m# manager.send_report[m
[32m+[m
[32m+[m[32m# p manager.employees[m
[32m+[m[32m# p "employee1 salary before raise"[m
[32m+[m[32m# p employee1.salary[m
[32m+[m[32m# p "employee2 salary before raise"[m
[32m+[m[32m# p employee2.salary[m
[32m+[m[32m# manager.give_all_raises[m
[32m+[m[32m# p "employee1 salary after raise"[m
[32m+[m[32m# p employee1.salary[m
[32m+[m[32m# p "employee2 salary after raise"[m
[32m+[m[32m# p employee2.salary[m
[32m+[m
[32m+[m[32mmanager.fire_all_employees[m
[32m+[m
[32m+[m[32mp manager.employees[m
[32m+[m
[32m+[m[32m# Don't[m
[32m+[m[32m# Repeat[m
[32m+[m[32m# Yourself[m
[32m+[m
[32m+[m[32m# Write[m
[32m+[m[32m# Everything[m
[32m+[m[32m# Twice[m
[32m+[m
[32m+[m[32m# give all the employees a raise[m
[32m+[m[32m# make a method[m
[32m+[m[32m# find all the employees [employee1, employee2][m
[32m+[m[32m# find just one of the employees[m
[32m+[m[32m# give one employee a raise[m
[1mdiff --git a/module_example.rb b/module_example.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..ebf56c9[m
[1m--- /dev/null[m
[1m+++ b/module_example.rb[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mmodule Command[m
[32m+[m[32m  def[m
[32m+[m[32m    speed = 0[m
[32m+[m[32m  end[m
[32m+[m[32m  def[m[41m  [m
[32m+[m[32m    direction = "north"[m
[32m+[m[32m  end[m
[32m+[m[32m  def[m[41m  [m
[32m+[m[32m    brake[m
[32m+[m[32m  end[m
[32m+[m[32m  def[m
[32m+[m[32m    accelerate = 0[m
[32m+[m[32m  end[m
[32m+[m[32m  def turn(new_direction)[m
[32m+[m[32m    @direction = new_direction[m
[32m+[m[32m  end[m
[32m+[m[32m  end[m[41m  [m
[32m+[m[32mend[m
[32m+[m[32mclass Car[m
[32m+[m[32m  include Command[m
[32m+[m[32m  def initialize[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m    @direction = 'north'[m
[32m+[m[32m  end[m
[32m+[m[32m  def honk_horn[m
[32m+[m[32m    puts "Beeeeeeep!"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mclass Bike[m
[32m+[m[32m  include Command[m
[32m+[m[32m  def initialize[m
[32m+[m[32m    @speed = 0[m
[32m+[m[32m    @direction = 'north'[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def ring_bell[m
[32m+[m[32m    puts "Ring ring!"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mcar = Car.newcar.brake[m
\ No newline at end of file[m

[33mcommit ad7049915a0dea43fbcb8ca96e494f89f23c60c9[m[33m ([m[1;31morigin/main[m[33m)[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Tue Jul 19 16:32:43 2022 -0500

    first commit

[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..90e7ece[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# practice_ruby[m

[33mcommit cd8d03d25741dda348cac43b04ca94183c64e7fd[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Tue Jul 19 15:33:38 2022 -0500

    create coffe store

[1mdiff --git a/store_item.rb b/store_item.rb[m
[1mindex 6b509d7..ae344e9 100644[m
[1m--- a/store_item.rb[m
[1m+++ b/store_item.rb[m
[36m@@ -15,27 +15,44 @@[m
 # }[m
 # puts coffee[:item][m
 [m
[31m-class Store[m
[31m-  def initialize(item, price, size)[m
[31m-    @item = item[m
[31m-    @price = price[m
[31m-    @size = size[m
[31m-  end[m
[32m+[m[32m# class Store[m
[32m+[m[32m# def initialize(item, price, size)[m
[32m+[m[32m# @item = item[m
[32m+[m[32m# #     @price = price[m
[32m+[m[32m# #     @size = size[m
[32m+[m[32m# #   end[m
 [m
[31m-  def item[m
[31m-    @item[m
[31m-  end[m
[32m+[m[32m# #   def item[m
[32m+[m[32m# #     @item[m
[32m+[m[32m# #   end[m
 [m
[31m-  def price[m
[31m-    @price[m
[31m-  end[m
[32m+[m[32m# #   def price[m
[32m+[m[32m# #     @price[m
[32m+[m[32m# #   end[m
[32m+[m
[32m+[m[32m# #   def size=(add_size)[m
[32m+[m[32m# #     @size = add_size[m
[32m+[m[32m# #   end[m
[32m+[m[32m# # end[m
[32m+[m
[32m+[m[32m# # store1 = Store.new("cappucino", 4.99, "large")[m
[32m+[m
[32m+[m[32m# # puts store1.item[m
[32m+[m[32m# # puts store1.price[m
[32m+[m[32m# # puts store1.size = ("medium")[m
[32m+[m
[32m+[m[32mclass Store[m
[32m+[m[32m  attr_reader :item, :price[m
[32m+[m[32m  attr_writer :size[m
 [m
[31m-  def size=(add_size)[m
[31m-    @size = add_size[m
[32m+[m[32m  def initialize(input_options)[m
[32m+[m[32m    @item = input_options[:item][m
[32m+[m[32m    @price = input_options[:price][m
[32m+[m[32m    @size = input_options[:size][m
   end[m
 end[m
 [m
[31m-store1 = Store.new("cappucino", 4.99, "large")[m
[32m+[m[32mstore1 = Store.new(item: "cappucino", price: 4.99, size: "large")[m
 [m
 puts store1.item[m
 puts store1.price[m

[33mcommit 1c280fe01e9d844bddb82d14a6add94798f9671b[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Tue Jul 19 15:12:45 2022 -0500

    create coffe store

[1mdiff --git a/store_item.rb b/store_item.rb[m
[1mindex f23f1d0..6b509d7 100644[m
[1m--- a/store_item.rb[m
[1m+++ b/store_item.rb[m
[36m@@ -1,16 +1,42 @@[m
[31m-coffee = {[m
[31m-  :item => "cappucino",[m
[31m-  :price => 4.99,[m
[31m-  :size => "large",[m
[31m-}[m
[31m-pastries = {[m
[31m-  :item => "croissant",[m
[31m-  :price => 3.99,[m
[31m-  :size => "standard",[m
[31m-}[m
[31m-plates = {[m
[31m-  :item => "salad",[m
[31m-  :price => 7.99,[m
[31m-  :size => "small",[m
[31m-}[m
[31m-puts coffee[:item][m
[32m+[m[32m# coffee = {[m
[32m+[m[32m#   :item => "cappucino",[m
[32m+[m[32m#   :price => 4.99,[m
[32m+[m[32m#   :size => "large",[m
[32m+[m[32m# }[m
[32m+[m[32m# pastries = {[m
[32m+[m[32m#   :item => "croissant",[m
[32m+[m[32m#   :price => 3.99,[m
[32m+[m[32m#   :size => "standard",[m
[32m+[m[32m# }[m
[32m+[m[32m# plates = {[m
[32m+[m[32m#   :item => "salad",[m
[32m+[m[32m#   :price => 7.99,[m
[32m+[m[32m#   :size => "small",[m
[32m+[m[32m# }[m
[32m+[m[32m# puts coffee[:item][m
[32m+[m
[32m+[m[32mclass Store[m
[32m+[m[32m  def initialize(item, price, size)[m
[32m+[m[32m    @item = item[m
[32m+[m[32m    @price = price[m
[32m+[m[32m    @size = size[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def item[m
[32m+[m[32m    @item[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def price[m
[32m+[m[32m    @price[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def size=(add_size)[m
[32m+[m[32m    @size = add_size[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mstore1 = Store.new("cappucino", 4.99, "large")[m
[32m+[m
[32m+[m[32mputs store1.item[m
[32m+[m[32mputs store1.price[m
[32m+[m[32mputs store1.size = ("medium")[m

[33mcommit b9dbc41b009da62188cf11a58d3c581a1697a5e0[m
Author: alijm0806 <alijm1104@gmail.com>
Date:   Tue Jul 19 13:39:41 2022 -0500

    create coffe store

[1mdiff --git a/store_item.rb b/store_item.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..f23f1d0[m
[1m--- /dev/null[m
[1m+++ b/store_item.rb[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mcoffee = {[m
[32m+[m[32m  :item => "cappucino",[m
[32m+[m[32m  :price => 4.99,[m
[32m+[m[32m  :size => "large",[m
[32m+[m[32m}[m
[32m+[m[32mpastries = {[m
[32m+[m[32m  :item => "croissant",[m
[32m+[m[32m  :price => 3.99,[m
[32m+[m[32m  :size => "standard",[m
[32m+[m[32m}[m
[32m+[m[32mplates = {[m
[32m+[m[32m  :item => "salad",[m
[32m+[m[32m  :price => 7.99,[m
[32m+[m[32m  :size => "small",[m
[32m+[m[32m}[m
[32m+[m[32mputs coffee[:item][m
